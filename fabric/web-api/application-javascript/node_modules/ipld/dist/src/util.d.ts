export function first<T>(iterator: AsyncIterable<T>): Promise<T | undefined>;
export function last<T>(iterator: AsyncIterable<T>): Promise<T | undefined>;
export function all<T>(iterator: AsyncIterable<T>): Promise<T[]>;
export function extendIterator<T>(iterator: any): AsyncIterable<T> & Extensions<T>;
export type Extensions<T> = {
    first: () => Promise<T | undefined>;
    last: () => Promise<T | undefined>;
    all: () => Promise<T[]>;
};
//# sourceMappingURL=util.d.ts.map