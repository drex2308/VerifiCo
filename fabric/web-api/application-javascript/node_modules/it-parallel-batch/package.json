{
  "_from": "it-parallel-batch@^1.0.9",
  "_id": "it-parallel-batch@1.0.9",
  "_inBundle": false,
  "_integrity": "sha512-lfCxXsHoEtgyWj5HLrEQXlZF0p3c0hfYeVJAbxQIHIzHLq4lkYplUIe3UGxYl4n1Sjpcs6YL/87352399aVeIA==",
  "_location": "/it-parallel-batch",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "it-parallel-batch@^1.0.9",
    "name": "it-parallel-batch",
    "escapedName": "it-parallel-batch",
    "rawSpec": "^1.0.9",
    "saveSpec": null,
    "fetchSpec": "^1.0.9"
  },
  "_requiredBy": [
    "/ipfs-unixfs-importer"
  ],
  "_resolved": "https://registry.npmjs.org/it-parallel-batch/-/it-parallel-batch-1.0.9.tgz",
  "_shasum": "15bc1a20c308253137d73141476cde1c23e13788",
  "_spec": "it-parallel-batch@^1.0.9",
  "_where": "/home/dhanush/testfolder/fabric-samples/web-api/application-javascript/node_modules/ipfs-unixfs-importer",
  "author": {
    "name": "Alex Potsides",
    "email": "alex@achingbrain.net"
  },
  "bugs": {
    "url": "https://github.com/achingbrain/it/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "it-batch": "^1.0.8"
  },
  "deprecated": false,
  "description": "Takes an async iterator that emits promise-returning functions, invokes them in parallel and emits the results in the same order as the input",
  "devDependencies": {
    "ava": "^3.12.1",
    "delay": "^4.3.0",
    "it-all": "^1.0.5",
    "nyc": "^15.1.0",
    "standard": "^16.0.3",
    "typescript": "^4.0.2"
  },
  "gitHead": "072e516f67366da9a371d54bbb216850502d78aa",
  "homepage": "https://github.com/achingbrain/it#readme",
  "license": "ISC",
  "main": "index.js",
  "name": "it-parallel-batch",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/achingbrain/it.git"
  },
  "scripts": {
    "build": "npm run build:types",
    "build:dep:types": "cd node_modules/it-batch && npm run build:types",
    "build:types": "npm run build:dep:types && tsc --emitDeclarationOnly --declarationDir dist",
    "check": "npm run build:dep:types && tsc --noEmit",
    "clean": "rm -rf .nyc_output coverage dist",
    "coverage": "nyc --reporter html --reporter lcov ava",
    "lint": "standard",
    "prepublishOnly": "npm run build",
    "test": "ava"
  },
  "typesVersions": {
    "*": {
      "*": [
        ".",
        "dist/*"
      ]
    }
  },
  "version": "1.0.9"
}
