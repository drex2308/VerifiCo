export = LevelDatastore;
/**
 * @typedef {import('interface-datastore').Datastore} Datastore
 * @typedef {import('interface-datastore').Pair} Pair
 * @typedef {import('interface-datastore').Batch} Batch
 * @typedef {import('interface-datastore').Query} Query
 * @typedef {import('interface-datastore').KeyQuery} KeyQuery
 * @typedef {import('interface-datastore').Options} QueryOptions
 */
/**
 * A datastore backed by leveldb.
 *
 * @implements {Datastore}
 */
declare class LevelDatastore extends Adapter implements Datastore {
    /**
     * @param {any} path
     * @param {Object} [opts]
     * @param {any} [opts.db] - level db reference
     * @param {boolean} [opts.createIfMissing]
     * @param {boolean} [opts.errorIfExists]
     */
    constructor(path: any, opts?: {
        db?: any;
        createIfMissing?: boolean | undefined;
        errorIfExists?: boolean | undefined;
    } | undefined);
    path: any;
    opts: {
        db?: any;
        createIfMissing?: boolean | undefined;
        errorIfExists?: boolean | undefined;
    } | undefined;
    database: any;
    _initDb(): Promise<any>;
    db: any;
    /**
     * @param {object} opts
     * @param {boolean} opts.values
     * @param {string} [opts.prefix]
     * @returns {AsyncIterable<Pair>}
     */
    _query(opts: {
        values: boolean;
        prefix?: string | undefined;
    }): AsyncIterable<Pair>;
}
declare namespace LevelDatastore {
    export { LevelIterator, Datastore, Pair, Batch, Query, KeyQuery, QueryOptions };
}
type Datastore = import('interface-datastore').Datastore;
import { Adapter } from "interface-datastore";
type Pair = import('interface-datastore').Pair;
type LevelIterator = {
    next: (cb: (err: Error, key: string | Uint8Array | null, value: any) => void) => void;
    end: (cb: (err: Error) => void) => void;
};
type Batch = import('interface-datastore').Batch;
type Query = import('interface-datastore').Query;
type KeyQuery = import('interface-datastore').KeyQuery;
type QueryOptions = import('interface-datastore').Options;
//# sourceMappingURL=index.d.ts.map